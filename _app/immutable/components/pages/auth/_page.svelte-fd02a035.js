import { S as SvelteComponent, i as init, s as safe_not_equal, k as element, q as text, a as space, I as head_selector, l as claim_element, m as children, h as detach, r as claim_text, c as claim_space, n as attr, J as src_url_equal, p as set_style, G as append_hydration, b as insert_hydration, B as noop } from "../../../chunks/index-5f53a548.js";
function create_fragment(ctx) {
  let html;
  let meta0;
  let meta1;
  let meta2;
  let meta3;
  let meta4;
  let meta5;
  let meta6;
  let meta7;
  let meta8;
  let script0;
  let script0_src_value;
  let script1;
  let t0;
  let t1;
  let main;
  let p0;
  let b0;
  let t2;
  let br0;
  let br1;
  let t3;
  let a0;
  let t4;
  let t5;
  let a1;
  let t6;
  let t7;
  let br2;
  let t8;
  let a2;
  let t9;
  let t10;
  let b1;
  let t11;
  let t12;
  let br3;
  let t13;
  let br4;
  let br5;
  let t14;
  let br6;
  let br7;
  let t15;
  let hr;
  let t16;
  let p1;
  let b2;
  let t17;
  let br8;
  let br9;
  let t18;
  let a3;
  let t19;
  let t20;
  let a4;
  let t21;
  let t22;
  let br10;
  let t23;
  let a5;
  let t24;
  let t25;
  let b3;
  let t26;
  let br11;
  let t27;
  let br12;
  let br13;
  let t28;
  let br14;
  let br15;
  let t29;
  let a6;
  let t30;
  let t31;
  let form;
  let input0;
  let t32;
  let input1;
  let t33;
  let input2;
  let t34;
  let input3;
  let t35;
  let input4;
  let t36;
  let br16;
  let t37;
  let script2;
  let t38;
  return {
    c() {
      html = element("html");
      meta0 = element("meta");
      meta1 = element("meta");
      meta2 = element("meta");
      meta3 = element("meta");
      meta4 = element("meta");
      meta5 = element("meta");
      meta6 = element("meta");
      meta7 = element("meta");
      meta8 = element("meta");
      script0 = element("script");
      script1 = element("script");
      t0 = text("window.dataLayer = window.dataLayer || [];\r\n    function gtag(){dataLayer.push(arguments);}\r\n    gtag('js', new Date());\r\n\r\n    gtag('config', 'G-7FLKW9GYQ6');");
      t1 = space();
      main = element("main");
      p0 = element("p");
      b0 = element("b");
      t2 = text("Anyone can edit the IIDX SP ☆12(Lv12) rekidai data.");
      br0 = element("br");
      br1 = element("br");
      t3 = text("\r\n    If you want to update rekidai data, please fork ");
      a0 = element("a");
      t4 = text("https://github.com/rekidai-info/rekidai-info.github.io");
      t5 = text(", edit ");
      a1 = element("a");
      t6 = text("rekidai.json");
      t7 = text(", and submit a Pull Request. That's all.");
      br2 = element("br");
      t8 = text("\r\n    All you need to do is ");
      a2 = element("a");
      t9 = text("create a GitHub account");
      t10 = text(", and you ");
      b1 = element("b");
      t11 = text("DO NOT");
      t12 = text(" need to install any git tools.");
      br3 = element("br");
      t13 = text("\r\n    The rekidai.json file can be edited in your browser, and Pull Requests can be made in your browser.");
      br4 = element("br");
      br5 = element("br");
      t14 = text("\r\n  \r\n    Please submit at least one Pull Request to view this site.");
      br6 = element("br");
      br7 = element("br");
      t15 = space();
      hr = element("hr");
      t16 = space();
      p1 = element("p");
      b2 = element("b");
      t17 = text("誰でも IIDX SP ☆12(Lv12) 歴代データを修正できます。");
      br8 = element("br");
      br9 = element("br");
      t18 = text("\r\n    歴代データを更新したい場合、");
      a3 = element("a");
      t19 = text("https://github.com/rekidai-info/rekidai-info.github.io");
      t20 = text(" をフォークし、");
      a4 = element("a");
      t21 = text("rekidai.json");
      t22 = text(" を編集し、Pull Request を提出してください。");
      br10 = element("br");
      t23 = text("\r\n    必要なのは");
      a5 = element("a");
      t24 = text("GitHub のアカウントを作成");
      t25 = text("する事のみで、");
      b3 = element("b");
      t26 = text("git などのツールをインストールする必要はありません。");
      br11 = element("br");
      t27 = text("\r\n    rekidai.json ファイルはブラウザ上で編集が可能で、Pull Request もブラウザ上で提出できます。");
      br12 = element("br");
      br13 = element("br");
      t28 = text("\r\n  \r\n    本サイトを閲覧するには、一度以上 Pull Request を提出してください。");
      br14 = element("br");
      br15 = element("br");
      t29 = space();
      a6 = element("a");
      t30 = text("Amazon Wish List");
      t31 = space();
      form = element("form");
      input0 = element("input");
      t32 = space();
      input1 = element("input");
      t33 = space();
      input2 = element("input");
      t34 = space();
      input3 = element("input");
      t35 = space();
      input4 = element("input");
      t36 = space();
      br16 = element("br");
      t37 = space();
      script2 = element("script");
      t38 = text('document.getElementById("auth").addEventListener("submit", () => {\n  const state = Math.random().toString(36).slice(-8);\n  localStorage.clear();\n  localStorage.setItem("state", state);\n  document.getElementById("state").value = state;\n});');
      this.h();
    },
    l(nodes) {
      const head_nodes = head_selector("svelte-1wx3o1p", document.head);
      html = claim_element(head_nodes, "HTML", { lang: true });
      children(html).forEach(detach);
      meta0 = claim_element(head_nodes, "META", { name: true, content: true });
      meta1 = claim_element(head_nodes, "META", { name: true, content: true });
      meta2 = claim_element(head_nodes, "META", { name: true, content: true });
      meta3 = claim_element(head_nodes, "META", { property: true, content: true });
      meta4 = claim_element(head_nodes, "META", { property: true, content: true });
      meta5 = claim_element(head_nodes, "META", { property: true, content: true });
      meta6 = claim_element(head_nodes, "META", { property: true, content: true });
      meta7 = claim_element(head_nodes, "META", { property: true, content: true });
      meta8 = claim_element(head_nodes, "META", { property: true, content: true });
      script0 = claim_element(head_nodes, "SCRIPT", { src: true });
      var script0_nodes = children(script0);
      script0_nodes.forEach(detach);
      script1 = claim_element(head_nodes, "SCRIPT", {});
      var script1_nodes = children(script1);
      t0 = claim_text(script1_nodes, "window.dataLayer = window.dataLayer || [];\r\n    function gtag(){dataLayer.push(arguments);}\r\n    gtag('js', new Date());\r\n\r\n    gtag('config', 'G-7FLKW9GYQ6');");
      script1_nodes.forEach(detach);
      head_nodes.forEach(detach);
      t1 = claim_space(nodes);
      main = claim_element(nodes, "MAIN", {});
      var main_nodes = children(main);
      p0 = claim_element(main_nodes, "P", {});
      var p0_nodes = children(p0);
      b0 = claim_element(p0_nodes, "B", {});
      var b0_nodes = children(b0);
      t2 = claim_text(b0_nodes, "Anyone can edit the IIDX SP ☆12(Lv12) rekidai data.");
      b0_nodes.forEach(detach);
      br0 = claim_element(p0_nodes, "BR", {});
      br1 = claim_element(p0_nodes, "BR", {});
      t3 = claim_text(p0_nodes, "\r\n    If you want to update rekidai data, please fork ");
      a0 = claim_element(p0_nodes, "A", { href: true, target: true, rel: true });
      var a0_nodes = children(a0);
      t4 = claim_text(a0_nodes, "https://github.com/rekidai-info/rekidai-info.github.io");
      a0_nodes.forEach(detach);
      t5 = claim_text(p0_nodes, ", edit ");
      a1 = claim_element(p0_nodes, "A", { href: true, target: true, rel: true });
      var a1_nodes = children(a1);
      t6 = claim_text(a1_nodes, "rekidai.json");
      a1_nodes.forEach(detach);
      t7 = claim_text(p0_nodes, ", and submit a Pull Request. That's all.");
      br2 = claim_element(p0_nodes, "BR", {});
      t8 = claim_text(p0_nodes, "\r\n    All you need to do is ");
      a2 = claim_element(p0_nodes, "A", { href: true, target: true, rel: true });
      var a2_nodes = children(a2);
      t9 = claim_text(a2_nodes, "create a GitHub account");
      a2_nodes.forEach(detach);
      t10 = claim_text(p0_nodes, ", and you ");
      b1 = claim_element(p0_nodes, "B", {});
      var b1_nodes = children(b1);
      t11 = claim_text(b1_nodes, "DO NOT");
      b1_nodes.forEach(detach);
      t12 = claim_text(p0_nodes, " need to install any git tools.");
      br3 = claim_element(p0_nodes, "BR", {});
      t13 = claim_text(p0_nodes, "\r\n    The rekidai.json file can be edited in your browser, and Pull Requests can be made in your browser.");
      br4 = claim_element(p0_nodes, "BR", {});
      br5 = claim_element(p0_nodes, "BR", {});
      t14 = claim_text(p0_nodes, "\r\n  \r\n    Please submit at least one Pull Request to view this site.");
      br6 = claim_element(p0_nodes, "BR", {});
      br7 = claim_element(p0_nodes, "BR", {});
      p0_nodes.forEach(detach);
      t15 = claim_space(main_nodes);
      hr = claim_element(main_nodes, "HR", {});
      t16 = claim_space(main_nodes);
      p1 = claim_element(main_nodes, "P", {});
      var p1_nodes = children(p1);
      b2 = claim_element(p1_nodes, "B", {});
      var b2_nodes = children(b2);
      t17 = claim_text(b2_nodes, "誰でも IIDX SP ☆12(Lv12) 歴代データを修正できます。");
      b2_nodes.forEach(detach);
      br8 = claim_element(p1_nodes, "BR", {});
      br9 = claim_element(p1_nodes, "BR", {});
      t18 = claim_text(p1_nodes, "\r\n    歴代データを更新したい場合、");
      a3 = claim_element(p1_nodes, "A", { href: true, target: true, rel: true });
      var a3_nodes = children(a3);
      t19 = claim_text(a3_nodes, "https://github.com/rekidai-info/rekidai-info.github.io");
      a3_nodes.forEach(detach);
      t20 = claim_text(p1_nodes, " をフォークし、");
      a4 = claim_element(p1_nodes, "A", { href: true, target: true, rel: true });
      var a4_nodes = children(a4);
      t21 = claim_text(a4_nodes, "rekidai.json");
      a4_nodes.forEach(detach);
      t22 = claim_text(p1_nodes, " を編集し、Pull Request を提出してください。");
      br10 = claim_element(p1_nodes, "BR", {});
      t23 = claim_text(p1_nodes, "\r\n    必要なのは");
      a5 = claim_element(p1_nodes, "A", { href: true, target: true, rel: true });
      var a5_nodes = children(a5);
      t24 = claim_text(a5_nodes, "GitHub のアカウントを作成");
      a5_nodes.forEach(detach);
      t25 = claim_text(p1_nodes, "する事のみで、");
      b3 = claim_element(p1_nodes, "B", {});
      var b3_nodes = children(b3);
      t26 = claim_text(b3_nodes, "git などのツールをインストールする必要はありません。");
      b3_nodes.forEach(detach);
      br11 = claim_element(p1_nodes, "BR", {});
      t27 = claim_text(p1_nodes, "\r\n    rekidai.json ファイルはブラウザ上で編集が可能で、Pull Request もブラウザ上で提出できます。");
      br12 = claim_element(p1_nodes, "BR", {});
      br13 = claim_element(p1_nodes, "BR", {});
      t28 = claim_text(p1_nodes, "\r\n  \r\n    本サイトを閲覧するには、一度以上 Pull Request を提出してください。");
      br14 = claim_element(p1_nodes, "BR", {});
      br15 = claim_element(p1_nodes, "BR", {});
      t29 = claim_space(p1_nodes);
      a6 = claim_element(p1_nodes, "A", { href: true, target: true, rel: true });
      var a6_nodes = children(a6);
      t30 = claim_text(a6_nodes, "Amazon Wish List");
      a6_nodes.forEach(detach);
      p1_nodes.forEach(detach);
      t31 = claim_space(main_nodes);
      form = claim_element(main_nodes, "FORM", { id: true, action: true, method: true });
      var form_nodes = children(form);
      input0 = claim_element(form_nodes, "INPUT", { type: true, name: true });
      t32 = claim_space(form_nodes);
      input1 = claim_element(form_nodes, "INPUT", { type: true, name: true, id: true });
      t33 = claim_space(form_nodes);
      input2 = claim_element(form_nodes, "INPUT", { type: true, name: true });
      t34 = claim_space(form_nodes);
      input3 = claim_element(form_nodes, "INPUT", { type: true, name: true, id: true });
      t35 = claim_space(form_nodes);
      input4 = claim_element(form_nodes, "INPUT", { type: true, style: true });
      t36 = claim_space(form_nodes);
      form_nodes.forEach(detach);
      br16 = claim_element(main_nodes, "BR", {});
      t37 = claim_space(main_nodes);
      script2 = claim_element(main_nodes, "SCRIPT", { lang: true });
      var script2_nodes = children(script2);
      t38 = claim_text(script2_nodes, 'document.getElementById("auth").addEventListener("submit", () => {\n  const state = Math.random().toString(36).slice(-8);\n  localStorage.clear();\n  localStorage.setItem("state", state);\n  document.getElementById("state").value = state;\n});');
      script2_nodes.forEach(detach);
      main_nodes.forEach(detach);
      this.h();
    },
    h() {
      attr(html, "lang", "ja");
      document.title = "beatmania IIDX SP ☆12(Lv12) 歴代全一 Top Scores/Rankers Viewer";
      attr(meta0, "name", "description");
      attr(meta0, "content", "beatmania IIDX(弐寺/투덱) SP ☆12(Lv12) 歴代全一(역대/Rekidai)スコア(Score)/ランカー(Top Ranker)を表示します。");
      attr(meta1, "name", "keywords");
      attr(meta1, "content", "beatmania,IIDX,iidx,弐寺,투덱,☆12,Lv12,歷代,歴代全一,歴代スコア,역대,TOP RANKER,TOP RANKERS,rekidai,KONAMI,コナミ");
      attr(meta2, "name", "google-site-verification");
      attr(meta2, "content", "TZhDInm_qqk0-YS_IeFxjcn6jbrmfEccgvRL8cFjm3k");
      attr(meta3, "property", "og:title");
      attr(meta3, "content", "beatmania IIDX SP ☆12(Lv12) 歴代");
      attr(meta4, "property", "og:site_name");
      attr(meta4, "content", "beatmania IIDX SP Lv12 Rekidai Top Score Database");
      attr(meta5, "property", "og:url");
      attr(meta5, "content", "https://rekidai-info.github.io");
      attr(meta6, "property", "og:description");
      attr(meta6, "content", "The top scores of beatmania IIDX in the past are listed.");
      attr(meta7, "property", "og:type");
      attr(meta7, "content", "website");
      attr(meta8, "property", "og:image");
      attr(meta8, "content", "https://rekidai-info.github.io/ogimage.jpg");
      script0.async = true;
      if (!src_url_equal(script0.src, script0_src_value = "https://www.googletagmanager.com/gtag/js?id=G-7FLKW9GYQ6"))
        attr(script0, "src", script0_src_value);
      attr(a0, "href", "https://github.com/rekidai-info/rekidai-info.github.io");
      attr(a0, "target", "_blank");
      attr(a0, "rel", "noopener noreferrer");
      attr(a1, "href", "https://github.com/rekidai-info/rekidai-info.github.io/blob/main/static/rekidai.json");
      attr(a1, "target", "_blank");
      attr(a1, "rel", "noopener noreferrer");
      attr(a2, "href", "https://github.com/signup");
      attr(a2, "target", "_blank");
      attr(a2, "rel", "noopener noreferrer");
      attr(a3, "href", "https://github.com/rekidai-info/rekidai-info.github.io");
      attr(a3, "target", "_blank");
      attr(a3, "rel", "noopener noreferrer");
      attr(a4, "href", "https://github.com/rekidai-info/rekidai-info.github.io/blob/main/static/rekidai.json");
      attr(a4, "target", "_blank");
      attr(a4, "rel", "noopener noreferrer");
      attr(a5, "href", "https://github.com/signup");
      attr(a5, "target", "_blank");
      attr(a5, "rel", "noopener noreferrer");
      attr(a6, "href", "https://amzn.to/3jqk39S");
      attr(a6, "target", "_blank");
      attr(a6, "rel", "noopener noreferrer");
      attr(input0, "type", "hidden");
      attr(input0, "name", "client_id");
      input0.value = "318d31204d4bea1c1c01";
      attr(input1, "type", "hidden");
      attr(input1, "name", "redirect_uri");
      attr(input1, "id", "redirect");
      input1.value = "https://rekidai-info.github.io/callback.html";
      attr(input2, "type", "hidden");
      attr(input2, "name", "scope");
      input2.value = "";
      attr(input3, "type", "hidden");
      attr(input3, "name", "state");
      attr(input3, "id", "state");
      input3.value = "state";
      attr(input4, "type", "submit");
      input4.value = "Sign up with GitHub";
      set_style(input4, "color", "#EEEEEE");
      set_style(input4, "background-color", "#00527A");
      set_style(input4, "border-radius", "8px");
      set_style(input4, "font-size", "1.1em");
      set_style(input4, "padding", "4px");
      attr(form, "id", "auth");
      attr(form, "action", "https://github.com/login/oauth/authorize");
      attr(form, "method", "GET");
      attr(script2, "lang", "ts");
    },
    m(target, anchor) {
      append_hydration(document.head, html);
      append_hydration(document.head, meta0);
      append_hydration(document.head, meta1);
      append_hydration(document.head, meta2);
      append_hydration(document.head, meta3);
      append_hydration(document.head, meta4);
      append_hydration(document.head, meta5);
      append_hydration(document.head, meta6);
      append_hydration(document.head, meta7);
      append_hydration(document.head, meta8);
      append_hydration(document.head, script0);
      append_hydration(document.head, script1);
      append_hydration(script1, t0);
      insert_hydration(target, t1, anchor);
      insert_hydration(target, main, anchor);
      append_hydration(main, p0);
      append_hydration(p0, b0);
      append_hydration(b0, t2);
      append_hydration(p0, br0);
      append_hydration(p0, br1);
      append_hydration(p0, t3);
      append_hydration(p0, a0);
      append_hydration(a0, t4);
      append_hydration(p0, t5);
      append_hydration(p0, a1);
      append_hydration(a1, t6);
      append_hydration(p0, t7);
      append_hydration(p0, br2);
      append_hydration(p0, t8);
      append_hydration(p0, a2);
      append_hydration(a2, t9);
      append_hydration(p0, t10);
      append_hydration(p0, b1);
      append_hydration(b1, t11);
      append_hydration(p0, t12);
      append_hydration(p0, br3);
      append_hydration(p0, t13);
      append_hydration(p0, br4);
      append_hydration(p0, br5);
      append_hydration(p0, t14);
      append_hydration(p0, br6);
      append_hydration(p0, br7);
      append_hydration(main, t15);
      append_hydration(main, hr);
      append_hydration(main, t16);
      append_hydration(main, p1);
      append_hydration(p1, b2);
      append_hydration(b2, t17);
      append_hydration(p1, br8);
      append_hydration(p1, br9);
      append_hydration(p1, t18);
      append_hydration(p1, a3);
      append_hydration(a3, t19);
      append_hydration(p1, t20);
      append_hydration(p1, a4);
      append_hydration(a4, t21);
      append_hydration(p1, t22);
      append_hydration(p1, br10);
      append_hydration(p1, t23);
      append_hydration(p1, a5);
      append_hydration(a5, t24);
      append_hydration(p1, t25);
      append_hydration(p1, b3);
      append_hydration(b3, t26);
      append_hydration(p1, br11);
      append_hydration(p1, t27);
      append_hydration(p1, br12);
      append_hydration(p1, br13);
      append_hydration(p1, t28);
      append_hydration(p1, br14);
      append_hydration(p1, br15);
      append_hydration(p1, t29);
      append_hydration(p1, a6);
      append_hydration(a6, t30);
      append_hydration(main, t31);
      append_hydration(main, form);
      append_hydration(form, input0);
      append_hydration(form, t32);
      append_hydration(form, input1);
      append_hydration(form, t33);
      append_hydration(form, input2);
      append_hydration(form, t34);
      append_hydration(form, input3);
      append_hydration(form, t35);
      append_hydration(form, input4);
      append_hydration(form, t36);
      append_hydration(main, br16);
      append_hydration(main, t37);
      append_hydration(main, script2);
      append_hydration(script2, t38);
    },
    p: noop,
    i: noop,
    o: noop,
    d(detaching) {
      detach(html);
      detach(meta0);
      detach(meta1);
      detach(meta2);
      detach(meta3);
      detach(meta4);
      detach(meta5);
      detach(meta6);
      detach(meta7);
      detach(meta8);
      detach(script0);
      detach(script1);
      if (detaching)
        detach(t1);
      if (detaching)
        detach(main);
    }
  };
}
class Page extends SvelteComponent {
  constructor(options) {
    super();
    init(this, options, null, create_fragment, safe_not_equal, {});
  }
}
export {
  Page as default
};
